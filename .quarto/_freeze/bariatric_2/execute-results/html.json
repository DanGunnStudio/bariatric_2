{
  "hash": "ffb9599e9b77266fb0d0c14365563ca6",
  "result": {
    "markdown": "---\ntitle: \"bariatric_2\"\n---\n\n\n## Bariatric Suppliers vs. Junk Food Companies vs. Ozempic\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: PerformanceAnalytics\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: xts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'PerformanceAnalytics'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:graphics':\n\n    legend\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: quantmod\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: TTR\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr   1.1.4     ✔ readr   2.1.4\n✔ forcats 1.0.0     ✔ stringr 1.5.1\n✔ ggplot2 3.4.4     ✔ tibble  3.2.1\n✔ purrr   1.0.2     ✔ tidyr   1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::first()  masks xts::first()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::last()   masks xts::last()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLoading required package: sysfonts\n\nLoading required package: showtextdb\n```\n:::\n:::\n\n\nThe Bariatric Surgery Supplier companies are...\n\n| Company              | Exchange | Ticker |\n|----------------------|----------|--------|\n| Johnson & Johnson    | NYSE     | JNJ    |\n| Medtronic            | NYSE     | MDT    |\n| Olympus Corporation  | NYSE     | OCPNF  |\n| Boston Scientific    | NYSE     | BSX    |\n| Asensus Surgical     | NYSE     | ASXC   |\n| ConMed Corporation   | NASDAQ   | CNMD   |\n| Intuitive Surgical   | NASDAQ   | ISRG   |\n| Apollo Endosurgery   | Delisted | APEN   |\n| ReShape Lifesciences | NASDAQ   | RSLS   |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbol_list <- c(\"JNJ\", \"MDT\", \"OCPNF\", \"BSX\", \"ASXC\", \"CNMD\", \"ISRG\", \"RSLS\")\nstart_date <- \"2020-01-01\"  # Example start date\nend_date <- \"2023-12-31\"    # Example end date\n\nbariatric_stock_prices <- tq_get(symbol_list, \n                       from = start_date, \n                       to = end_date, \n                       get = \"stock.prices\",\n                       collapse=\"monthly\")\n```\n:::\n\n\nThe processed (junk) food companies will be...\n\n| Company                | Exchange | Ticker |\n|------------------------|----------|--------|\n| Pespico                | NASDAQ   | PEP    |\n| Nestlé USA             |          | NSRGY  |\n| Kraft Heinz Company    | NASDAQ   | KHC    |\n| General Mills          | NYSE     | GIS    |\n| Mondelez International | NASDAQ   | MDLZ   |\n| Kellogg Company        | NYSE     | K      |\n| Conagra Brands         | NYSE     | CAG    |\n| Campbell Soup Company  | NYSE     | CPB    |\n| J.M. Smucker Company   | NYSE     | SJM    |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbol_list_2 <- c(\"PEP\", \"NSRGY\", \"KHC\", \"GIS\", \"MDLZ\", \"K\", \"CAG\", \"CPB\", \"SJM\")\n\njunkfood_stock_prices <- tq_get(symbol_list_2, \n                       from = start_date, \n                       to = end_date, \n                       get = \"stock.prices\",\n                       collapse=\"monthly\")\n```\n:::\n\n\nThere's only one maker of Ozempic at the moment.\n\n| Company      | Exchange | Ticker |\n|--------------|----------|--------|\n| Novo Nordisk | NYSE     | NVO    |\n| Eli Lilly    | NYSE     | LLY    |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbol_list_3 <- c(\"NVO\", \"LLY\")\n\npharma_stock_prices <- tq_get(symbol_list_3, \n                       from = start_date, \n                       to = end_date, \n                       get = \"stock.prices\",\n                       collapse=\"monthly\")\n```\n:::\n\n\nWhat if it's just Novo Nordisk\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbol_list_4 <- c(\"NVO\")\n\nnovo_stock_prices <- tq_get(symbol_list_4, \n                       from = start_date, \n                       to = end_date, \n                       get = \"stock.prices\",\n                       collapse=\"monthly\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: viridisLite\n```\n:::\n\n```{.r .cell-code}\nlibrary(viridisLite)\n\nhex_codes <- viridis(n = 5, option = \"G\") # Adjust 'n' for the number of colors you need\nhex_codes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"#0B0405FF\" \"#3E356BFF\" \"#357BA2FF\" \"#49C1ADFF\" \"#DEF5E5FF\"\n```\n:::\n:::\n\n\nCombine each data set into daily averages....\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbariatric_daily_average <- bariatric_stock_prices %>%\n  group_by(date) %>%\n  summarize(Average_Adjusted = mean(adjusted, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njunkfood_daily_average <- junkfood_stock_prices %>%\n  group_by(date) %>%\n  summarize(Average_Adjusted = mean(adjusted, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npharma_daily_average <- pharma_stock_prices %>%\n  group_by(date) %>%\n  summarize(Average_Adjusted = mean(adjusted, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add_google(name = \"Lato\", family = \"lato\")\n\nshowtext_auto()\n```\n:::\n\n\nNow I'm going to plot it to see what's going on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n    geom_area(data=bariatric_daily_average,\n            aes(x=date, y= Average_Adjusted),\n            color = \"#399687\",\n             fill= \"#399687\",\n            alpha = 0.3)+\n    geom_area(data=junkfood_daily_average,\n            aes(x=date, y= Average_Adjusted),\n            color = \"#3E356BFF\",\n            fill= \"#3E356BFF\",\n            alpha = 0.3)+\n  geom_area(data=novo_stock_prices,\n            aes(x=date, y= adjusted),\n            color = \"#FF3F70\",\n            fill = \"#FF3F70\",\n            alpha = 0.3)+\n  geom_vline(xintercept = as.Date(\"2021-06-04\"), \n             linetype = \"dotted\", \n             color = \"#FF3F70\",\n             size = 1)+ \n  scale_x_date(expand=c(0,0))+\n  scale_y_continuous(expand=c(0,0),\n                     labels = scales::label_dollar())+\n  labs(#title =\"Ozempic vs. Junkfood vs. Bariatrics\",\n       #subtitle = \"Percentage change since Jan 1 2020\",\n       #caption=\"Ozempic FDA Approval Date for Weigh Loss Highlighed\",\n       y=NULL,\n       x= NULL)+\n  theme_minimal()+\n  theme(axis.text = element_text(family =\"lato\", face=\"bold\", size =10, color = \"#3E356BFF\"),\n        panel.grid.minor = element_blank(),\n        axis.line= element_line(color = \"#3E356BFF\", linewidth = 0.25),\n        axis.ticks = element_blank()\n        )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](bariatric_2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(filename =  \"bariatric_2_stock.pdf\", \n       plot = last_plot(), \n       device = \"pdf\", \n       dpi= 400,\n       height =4,\n       width = 6)\n```\n:::\n\n\nNow I'd like to plot percentage change up and down.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate percentage change\nb_initial_value <- bariatric_daily_average$Average_Adjusted[1]\nj_initial_value <- junkfood_daily_average$Average_Adjusted[1]\nn_initial_value <- novo_stock_prices$adjusted[1]\n\nbariatric_daily_average <- bariatric_daily_average %>%\n  mutate(perc_change = ((Average_Adjusted - b_initial_value) / b_initial_value) * 100)\n \njunkfood_daily_average <- junkfood_daily_average %>% \n  mutate(perc_change = ((Average_Adjusted - j_initial_value) / j_initial_value) * 100)\n\nnovo_stock_prices<- novo_stock_prices %>% \n  mutate(perc_change = ((adjusted- n_initial_value) / n_initial_value) * 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#writing to CSV\nwrite_csv(bariatric_daily_average, \"bariatric_daily_average.csv\")\nwrite_csv(junkfood_daily_average, \"junkfood_daily_average.csv\")\nwrite_csv(novo_stock_prices, \"novo_stock_prices.csv\")\n\n#left joining to use with Datylon\ndata_combined <- bariatric_daily_average %>% rename(b_perc_change = perc_change,\n                                   b_Average_Adjusted= Average_Adjusted) %>%\n  left_join(junkfood_daily_average, by = join_by(date))%>%\n  rename(j_perc_change = perc_change,\n         j_Average_Adjusted= Average_Adjusted)%>%\n  left_join(novo_stock_prices, by = join_by(date))\n\n\nwrite_csv(data_combined, \"datacombined.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot centered around zero\nggplot() +\n    geom_area(data=novo_stock_prices,\n            aes(x=date, y= perc_change),\n            color = \"#FF3F70\",\n            fill = \"#FF3F70\",\n            alpha = 0.3)+\n\n  geom_area(data=junkfood_daily_average,\n            aes(x=date, y= perc_change),\n            color = \"#3E356BFF\",\n            fill= \"#3E356BFF\",\n            alpha = 0.3)+\n    geom_area(data=bariatric_daily_average,\n            aes(x=date, y= perc_change),\n            color = \"#399687\",\n            fill = \"#399687\",\n            alpha = 0.3)+\n\n  geom_vline(xintercept = as.Date(\"2021-06-04\"), \n             linetype = \"dotted\", \n             color = \"#FF3F70\",\n             linewidth = 0.75) +\n  scale_x_date(expand=c(0,0))+\n  scale_y_continuous(expand=c(0,0),\n                     labels = scales::label_percent(scale = 1))+\n  labs(#title =\"Ozempic vs. Junkfood vs. Bariatrics\",\n       #subtitle = \"Percentage change since Jan 1 2020\",\n       #caption=\"Ozempic FDA Approval Date for Weigh Loss Highlighed\",\n       y=NULL,\n       x= NULL)+\n  theme_minimal()+\n  theme(axis.text = element_text(family =\"lato\", face=\"bold\", size =10, color = \"#3E356BFF\"),\n        panel.grid.minor = element_blank(),\n        axis.line= element_line(color = \"#3E356BFF\", linewidth = 0.25),\n        axis.ticks = element_blank()\n        )\n```\n\n::: {.cell-output-display}\n![](bariatric_2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(filename =  \"bariatric_2_percent.pdf\", \n       plot = last_plot(), \n       device = \"pdf\", \n       dpi= 400,\n       height=4,\n       width=6)\n```\n:::\n\n\n**Methodology:** Adjusted stock prices gathered from January 1, 2020 to December 31, 2023. Surgery manufacturers included the average price of Johnson & Johnson, Medtronic, Olympus, Boston Scientific, Asensus Surgical, ConMed, Intuitive Surgical**,** Apollo Endosurgery and ReShape Lifesciences. Processed food corporations included the average price of PepsiCo, Nestlé, Kraft Heinz, General Mills, Mondelez, Kellogg, Conagra, Campbell Soup and J.M. Smucker.\n\n**Source:** Yahoo Finance\n",
    "supporting": [
      "bariatric_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}